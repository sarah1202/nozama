package com.nozama.test;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;
public class SuiteNozama26Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  
  @Before
  public void testGoogleSearch() throws InterruptedException {
	    // Optional. If not specified, WebDriver searches the PATH for chromedriver.
//---------------------------------------------setproperty = introduire driver chrome à jour--------------------------
	   // System.setProperty("webdriver.chrome.driver", "C:\\Users\\Administrateur\\Downloads\\chromedriver_win32\\chromedriver.exe");
		System.setProperty("webdriver.gecko.driver", "C:\\Users\\Administrateur\\Downloads\\geckodriver-v0.29.0-win64\\geckodriver.exe");

	driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }
  
  @After
  public void tearDown() {
    driver.quit();
  }
  
  @Test
  public void testcreationclient() {
    driver.get("http://127.0.0.1/nozama/");
    driver.manage().window().setSize(new Dimension(746, 798));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("#edit-name-wrapper > label"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-name")).click();
    driver.findElement(By.id("edit-name")).sendKeys("admin1");
    driver.findElement(By.id("edit-pass")).click();
    driver.findElement(By.id("edit-pass")).sendKeys("admin1");
    {
      List<WebElement> elements = driver.findElements(By.id("edit-submit"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-submit")).click();
    {
      List<WebElement> elements = driver.findElements(By.linkText("Ajouter un utilisateur"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.linkText("Ajouter un utilisateur")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("#edit-name-wrapper > label"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-name")).click();
    driver.findElement(By.id("edit-name")).sendKeys("may");
    driver.findElement(By.id("edit-mail")).click();
    driver.findElement(By.id("edit-mail")).sendKeys("may@gmail.com");
    driver.findElement(By.id("edit-pass-pass1")).click();
    driver.findElement(By.id("edit-pass-pass1")).sendKeys("may123");
    driver.findElement(By.id("edit-pass-pass2")).click();
    driver.findElement(By.id("edit-pass-pass2")).sendKeys("may123");
    {
      List<WebElement> elements = driver.findElements(By.id("edit-submit"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-submit")).click();
    {
      List<WebElement> elements = driver.findElements(By.linkText("Liste des utilisateurs"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.linkText("Liste des utilisateurs")).click();
  //-----------ne fonctionne pas -> accent => link par xpath--------------
   /* {
      List<WebElement> elements = driver.findElements(By.linkText("Se dÃ©connecter"));
      assert(elements.size() > 0);
    }*/
    // ------------------------cours :--------------------------------------------------------
    /*WebElement elementName = driver.findElement(By.LocatorStrategy("LocatorValue"));
     Locator Strategy can be any of the following values : ID / Selenium find element by Name /
 									 Class Name / Tag Name / Link Text / Partial Link Text / XPATH
     */
    driver.findElement(By.xpath("//*[@id=\"block-menu-menu-logout\"]/div/div/ul/li/a")).click();
  }
  
  @Test
  public void produitdanspanier() {
    driver.get("http://127.0.0.1/nozama/");
    driver.manage().window().setSize(new Dimension(746, 798));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("#edit-name-wrapper > label"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-name")).click();
    driver.findElement(By.id("edit-name")).sendKeys("may");
    driver.findElement(By.id("edit-pass")).click();
    driver.findElement(By.id("edit-pass")).sendKeys("may123");
    {
      List<WebElement> elements = driver.findElements(By.id("edit-submit"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-submit")).click();
    {
     //------------------------idem : pb accent--------------------
    	List<WebElement> elements = driver.findElements(By.xpath("//*[@id=\"content-content\"]/table/tbody/tr/td[1]/strong/a"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.xpath("//*[@id=\"content-content\"]/table/tbody/tr/td[1]/strong/a")).click();
    {
      List<WebElement> elements = driver.findElements(By.linkText("Wii & DS"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.linkText("Wii & DS")).click();
    driver.findElement(By.linkText("Nintendo Wii")).click();
    {
      List<WebElement> elements = driver.findElements(By.id("edit-submit-18"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-submit-18")).click();
    {
      List<WebElement> elements = driver.findElements(By.id("edit-continue-shopping"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-continue-shopping")).click();
    {
      List<WebElement> elements = driver.findElements(By.id("edit-search-theme-form-header"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-search-theme-form-header")).sendKeys("nintendo");
    {
      List<WebElement> elements = driver.findElements(By.id("edit-submit-2"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-submit-2")).click();
    driver.findElement(By.linkText("Nintendo DS Lite")).click();
    {
      List<WebElement> elements = driver.findElements(By.id("edit-submit-17"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-submit-17")).click();
    {
      List<WebElement> elements = driver.findElements(By.id("edit-checkout"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("edit-checkout")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//*[@id=\"block-menu-menu-logout\"]/div/div/ul/li/a"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.xpath("//*[@id=\"block-menu-menu-logout\"]/div/div/ul/li/a")).click();
    /*{
      List<WebElement> elements = driver.findElements(By.cssSelector("#edit-name-wrapper > label"));
      assert(elements.size() > 0);
    }*/
}
}
